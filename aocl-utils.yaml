platforms:
  # - name: Ubuntu 22.04
  #   image: ubuntu
  #   version: 22.04
  #   update-cmd: "apt update; apt upgrade -y"
  #   requirements-cmd: "apt install -y build-essential cmake git vim clang g++ gcc lsb-release curl wget python3 python3-pip ninja-build libglib2.0-dev flex bison"
  #   depends:
  #     - cmake
  #     - qemu
  # - name: Ubuntu 24.04
  #   image: ubuntu
  #   version: 24.04
  #   update-cmd: "apt update; apt upgrade -y"
  #   requirements-cmd: "apt install -y build-essential git vim clang g++ gcc lsb-release curl wget python3 python3-pip ninja-build qemu-user"
  #   depends:
  #     - cmake
  - name: Ubuntu 24.10
    image: ubuntu
    version: "24.10"
    update-cmd: "apt update; apt upgrade -y"
    requirements-cmd: "apt install -y build-essential git vim clang g++ gcc lsb-release curl wget python3 python3-pip ninja-build qemu-user"
    depends:
      - cmake
  # - name: Debian 12
  #   image: debian
  #   version: "12"
  #   update-cmd: "apt update; apt upgrade -y"
  #   requirements-cmd: "apt install -y build-essential git vim clang g++ gcc lsb-release curl wget python3 python3-pip ninja-build           pkg-config libglib2.0-dev libpixman-1-dev libsdl2-dev                     libusb-1.0-0-dev libaio-dev libcap-dev libcap-ng-dev libattr1-dev libbrlapi-dev libbz2-dev libcap-ng-dev libcurl4-gnutls-dev libepoxy-dev libfdt-dev libgbm-dev libgmp-dev libgnutls28-dev libgtk-3-dev libibverbs-dev libjpeg62-turbo-dev libncurses5-dev libncursesw5-dev libnfs-dev libnuma-dev libpulse-dev librbd-dev librdmacm-dev libsasl2-dev libseccomp-dev libsnappy-dev libssh-dev libvde-dev libvdeplug-dev libvte-2.91-dev libxen-dev libzstd-dev valgrind xfslibs-dev flex bison"
  #   depends:
  #     - cmake
  #     - qemu
  # - name: Arch Linux
  #   image: archlinux
  #   version: latest
  #   update-cmd: "pacman -Syu --noconfirm"
  #   requirements-cmd: "pacman -Syu --noconfirm base-devel git vim clang gcc lsb-release curl wget python python-pip ninja qemu-user"
  #   depends:
  #     - cmake
  # - name: RHEL 9
  #   image: redhat/ubi9
  #   version: latest
  #   update-cmd: "dnf update -y"
  #   requirements-cmd: "subscription-manager register --org=<ORG> --activationkey='<ACTIVATION_KEY>' ;dnf group install 'Development Tools';dnf install --allowerasing -y git vim clang gcc gcc-c++ curl wget python3 python3-pip python3-devel ninja-build glib2-devel flex bison xz bzip2 wget; subscription-manager unregister; subscription-manager clean"    
  #   depends:
  #     - cmake
  #     - qemu
  # - name: RHEL 8
  #   image: redhat/ubi8
  #   version: latest
  #   update-cmd: "dnf update -y"
  #   requirements-cmd: "subscription-manager register --org=<ORG> --activationkey='<ACTIVATION_KEY>' ;dnf group install 'Development Tools';dnf install --allowerasing -y git vim clang gcc gcc-c++ curl wget python3 python3-pip python3-devel ninja-build glib2-devel flex bison xz bzip2 wget zlib-devel bzip2-devel xz-devel; subscription-manager unregister; subscription-manager clean"    
  #   depends:
  #     - cmake
  #     - python
  #     - qemu

ssh-keys:
  enabled: true
  path: "ssh"
  keys:
    - gitlab
    - gitlab.pub
    - config
  mount-type: "copy"

qemu:
  url: https://download.qemu.org/qemu-<version>.tar.xz
  version: 9.0.4
  configure-cmd: "./configure"
  build-cmd: "make -j$(nproc)"
  install-cmd: "make install"

cmake:
  url: https://github.com/Kitware/CMake/releases/download/v<version>/cmake-<version>-linux-x86_64.sh
  versions:
  - 3.31.3
  # - 3.30.6
  # - 3.29.8
  # - 3.28.6
  # - 3.27.9
  # - 3.26.6

python:
  url: https://www.python.org/ftp/python/<version>/Python-<version>.tar.xz
  version: 3.13.1
  configure-cmd: "./configure"
  build-cmd: "make -j$(nproc)"
  install-cmd: "make install"

project:
   name: AOCL Utilities
   git-url: "git@github.com:AMD/aocl-utils.git"
  #  git-url: "https://github.com/AMD/aocl-utils.git"
   branch : "dev"
   configure-cmd: "cmake -S . -B build -DAU_BUILD_TESTS=ON -G Ninja"
   build-cmd: "cmake --build build"
   install-cmd: "cmake --install build"
   test-cmd: "git pull && cmake --build build && ctest --test-dir build -j $(nproc --all)"
  #  test-cmd: "git pull && cmake --build build && which qemu-x86_64; exit 1"